[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bilibili-content-analyzer"
version = "1.0.0"
description = "A comprehensive data analysis tool for Bilibili content analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Bilibili Content Analyzer Contributors", email = "contributors@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "pandas>=1.5.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "jieba>=0.42.0",
    "wordcloud>=1.9.0",
    "textblob>=0.17.0",
    "snownlp>=0.12.0",
    "python-dateutil>=2.8.0",
    "numpy>=1.21.0",
    "tqdm>=4.64.0",
    "openpyxl>=3.0.0",
    "plotly>=5.0.0",
    "beautifulsoup4>=4.11.0",
    "lxml>=4.9.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
bilibili-analyzer = "bilibili_analyzer.cli:main"

[project.urls]
Homepage = "https://github.com/example/bilibili-content-analyzer"
Documentation = "https://bilibili-content-analyzer.readthedocs.io"
Repository = "https://github.com/example/bilibili-content-analyzer"
Issues = "https://github.com/example/bilibili-content-analyzer/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
bilibili_analyzer = ["config/*.yaml", "templates/*.html"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]